# point this at wherever your .ped files live
ped_dir <- "/Users/huncho/Desktop/Forensic_Kinship_Project/Cases/Original_Files"
# pick one file to inspect
ped_BDUN <- file.path(ped_dir, "B_D_UN.ped")
# read it in (no header, space-delimited)
ped_BDUN <- read.table(ped_BDUN, header = FALSE, stringsAsFactors = FALSE)
View(ped_BDUN)
pwd
#── 0) PACKAGES ───────────────────────────────────────────────────────────
library(dplyr)
library(tidyr)
library(readr)
#── 1) POINT TO YOUR DIRECTORY ────────────────────────────────────────────
# adjust this to where your .lnlikelihood.txt files live
input_dir <- "/Users/huncho/Desktop/Forensic_Kinship_Project/Cases/Original_Files"
#── 2) FIND & READ ALL lnlikelihood FILES ─────────────────────────────────
files <- list.files(input_dir,
pattern = "\\.lnlikelihood\\.txt$",
full.names = TRUE)
df <- lapply(files, function(fpath) {
fname <- basename(fpath)
# split "A_B_FC.lnlikelihood.txt" → c("A","B","FC")
parts   <- strsplit(sub("\\.lnlikelihood\\.txt$", "", fname), "_")[[1]]
rel     <- tail(parts, 1)           # e.g. "FC" or "HS" or "UN"
case_id <- paste(parts[-length(parts)], collapse = "_")
lnL     <- as.numeric(read_lines(fpath))  # reads the single number
tibble(case = case_id, relation = rel, lnL = lnL)
}) %>% bind_rows()
#── 3) PIVOT TO WIDE FORMAT ───────────────────────────────────────────────
wide <- df %>%
pivot_wider(names_from  = relation,
values_from = lnL,
names_prefix = "lnL_")  %>%
rename(lnL_FC = lnL_FC,
lnL_HS = lnL_HS,
lnL_UN = lnL_UN)
#── 4) COMPUTE LINEAR-LR VALUES ───────────────────────────────────────────
wide <- wide %>%
mutate(
LR_FC = exp(lnL_FC - lnL_UN),
LR_HS = exp(lnL_HS - lnL_UN)
)
#── 5) SAVE A SUMMARY CSV ─────────────────────────────────────────────────
out_csv <- file.path(input_dir, "Case_LR_summary.csv")
write_csv(wide, out_csv)
message("✅ Done! Summary written to: ", out_csv)
#── 0) PACKAGES ───────────────────────────────────────────────────────────
library(dplyr)
library(tidyr)
library(readr)
#── 1) POINT TO YOUR DIRECTORY ────────────────────────────────────────────
# adjust this to where your .lnlikelihood.txt files live
input_dir <- "/Users/huncho/Desktop/Forensic_Kinship_Project/Cases/Original_Files"
#── 2) FIND & READ ALL lnlikelihood FILES ─────────────────────────────────
files <- list.files(input_dir,
pattern = "\\.lnlikelihood\\.txt$",
full.names = TRUE)
df <- lapply(files, function(fpath) {
fname <- basename(fpath)
# split "A_B_FC.lnlikelihood.txt" → c("A","B","FC")
parts   <- strsplit(sub("\\.lnlikelihood\\.txt$", "", fname), "_")[[1]]
rel     <- tail(parts, 1)           # e.g. "FC" or "HS" or "UN"
case_id <- paste(parts[-length(parts)], collapse = "_")
lnL     <- as.numeric(read_lines(fpath))  # reads the single number
tibble(case = case_id, relation = rel, lnL = lnL)
}) %>% bind_rows()
#── 3) PIVOT TO WIDE FORMAT ───────────────────────────────────────────────
wide <- df %>%
pivot_wider(names_from  = relation,
values_from = lnL,
names_prefix = "lnL_")  %>%
rename(lnL_FC = lnL_FC,
lnL_HS = lnL_HS,
lnL_UN = lnL_UN)
#── 4) COMPUTE LINEAR-LR VALUES ───────────────────────────────────────────
wide <- wide %>%
mutate(
LR_FC = exp(lnL_FC - lnL_UN),
LR_HS = exp(lnL_HS - lnL_UN),
log10LR_FC = (lnL_FC - lnL_UN) / log(10),
log10LR_HS = (lnL_HS - lnL_UN) / log(10)
)
#── 5) SAVE A SUMMARY CSV ─────────────────────────────────────────────────
out_csv <- file.path(input_dir, "Case_LR_summary.csv")
write_csv(wide, out_csv)
message("✅ Done! Summary written to: ", out_csv)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
# Read files
fc_linked <- read.table("/Users/huncho/Desktop/Forensic_Kinship_Project/10,000_SNPs/FC_Simulation/FC_Linked/FC_Linked_lnlikelihoods.txt", header = TRUE)
fc_linked_unrelated <- read.table("/Users/huncho/Desktop/Forensic_Kinship_Project/10,000_SNPs/FC_Simulation/FC_Linked_Unrelated/FC_Linked_Unrelated_lnlikelihoods.txt", header = TRUE)
un_linked <- read.table("/Users/huncho/Desktop/Forensic_Kinship_Project/10,000_SNPs/FC_Simulation/UN_Linked/UN_Linked_lnlikelihoods.txt", header = TRUE)
un_linked_unrelated <- read.table("/Users/huncho/Desktop/Forensic_Kinship_Project/10,000_SNPs/FC_Simulation/UN_Linked_Unrelated/UN_Linked_Unrelated_lnlikelihoods.txt", header = TRUE)
fc_unlinked <- read.table("/Users/huncho/Desktop/Forensic_Kinship_Project/10,000_SNPs/FC_Simulation/FC_Unlinked/FC_Unlinked_lnlikelihoods.txt", header = TRUE)
fc_unlinked_unrelated <- read.table("/Users/huncho/Desktop/Forensic_Kinship_Project/10,000_SNPs/FC_Simulation/FC_Unlinked_Unrelated/FC_Unlinked_Unrelated_lnlikelihoods.txt", header = TRUE)
un_unlinked <- read.table("/Users/huncho/Desktop/Forensic_Kinship_Project/10,000_SNPs/FC_Simulation/UN_Unlinked/UN_Unlinked_lnlikelihoods.txt", header = TRUE)
un_unlinked_unrelated <- read.table("/Users/huncho/Desktop/Forensic_Kinship_Project/10,000_SNPs/FC_Simulation/UN_Unlinked_Unrelated/UN_Unlinked_Unrelated_lnlikelihoods.txt", header = TRUE)
all_lnL <- fc_linked %>%
rename(fc_linked = total_lnlikelihood) %>%
inner_join(fc_linked_unrelated %>% rename(fc_linked_unr = total_lnlikelihood), by = "replicate") %>%
inner_join(un_linked %>% rename(un_linked = total_lnlikelihood), by = "replicate") %>%
inner_join(un_linked_unrelated %>% rename(un_linked_unr = total_lnlikelihood), by = "replicate") %>%
inner_join(fc_unlinked %>% rename(fc_unlinked = total_lnlikelihood), by = "replicate") %>%
inner_join(fc_unlinked_unrelated %>% rename(fc_unlinked_unr = total_lnlikelihood), by = "replicate") %>%
inner_join(un_unlinked %>% rename(un_unlinked = total_lnlikelihood), by = "replicate") %>%
inner_join(un_unlinked_unrelated %>% rename(un_unlinked_unr = total_lnlikelihood), by = "replicate")
# Compute LR, logLR, and log10LR
all_lnL <- all_lnL %>%
mutate(
logLR_FC_linked = fc_linked - fc_linked_unr,
logLR_UN_linked = un_linked - un_linked_unr,
logLR_FC_unlinked = fc_unlinked - fc_unlinked_unr,
logLR_UN_unlinked = un_unlinked - un_unlinked_unr,
LR_FC_linked = exp(logLR_FC_linked),
LR_UN_linked = exp(logLR_UN_linked),
LR_FC_unlinked = exp(logLR_FC_unlinked),
LR_UN_unlinked = exp(logLR_UN_unlinked),
log10LR_FC_linked = logLR_FC_linked / log(10),
log10LR_UN_linked = logLR_UN_linked / log(10),
log10LR_FC_unlinked = logLR_FC_unlinked / log(10),
log10LR_UN_unlinked = logLR_UN_unlinked / log(10)
)
write.table(all_lnL, "FCvUN_LR_full_output.txt", sep = "\t", row.names = FALSE, quote = FALSE)
summary_stats <- data.frame(
condition = c("FC_linked", "UN_linked", "FC_unlinked", "UN_unlinked"),
min = c(
min(all_lnL$logLR_FC_linked),
min(all_lnL$logLR_UN_linked),
min(all_lnL$logLR_FC_unlinked),
min(all_lnL$logLR_UN_unlinked)
),
median = c(
median(all_lnL$logLR_FC_linked),
median(all_lnL$logLR_UN_linked),
median(all_lnL$logLR_FC_unlinked),
median(all_lnL$logLR_UN_unlinked)
),
max = c(
max(all_lnL$logLR_FC_linked),
max(all_lnL$logLR_UN_linked),
max(all_lnL$logLR_FC_unlinked),
max(all_lnL$logLR_UN_unlinked)
)
)
# Save summary stats
write.table(summary_stats, "FCvUN_logLR_summary_stats.txt", sep = "\t", row.names = FALSE, quote = FALSE)
library(dplyr)
library(tidyr)
library(ggplot2)
library(scales)
plot_data <- all_lnL %>%
transmute(
FC_linked    = log10LR_FC_linked,
FC_unlinked  = log10LR_FC_unlinked,
UN_linked    = log10LR_UN_linked,
UN_unlinked  = log10LR_UN_unlinked
) %>%
pivot_longer(
cols = everything(),
names_to = "Group",
values_to = "log10LR"
)
p <- ggplot(plot_data, aes(x = log10LR, colour = Group, fill = Group)) +
geom_density(alpha = 0.5, size = 0.8) +
geom_vline(xintercept = 0, linetype = "dashed", colour = "black") +
labs(
title = "Distribution of log10LRs for FC vs UN (9991 SNPs)",
x = "log10LR",
y = "Density"
) +
theme_minimal() +
theme(
legend.title = element_blank(),
legend.position = "right"
)
print(p)
ggsave(
filename = "FC_vs_UN_9991SNPs_log10LR.pdf",
plot = p,
device = "pdf",
width = 8,
height = 6,
dpi = 300
)
# Load required libraries
library(ggplot2)
library(dplyr)
library(tidyr)
# 1. Combine log10LRs into long format for FC vs UN only
plot_data_fc <- all_lnL %>%
transmute(
FC_linked    = log10LR_FC_linked,
FC_unlinked  = log10LR_FC_unlinked,
UN_linked    = log10LR_UN_linked,
UN_unlinked  = log10LR_UN_unlinked
) %>%
pivot_longer(
cols = everything(),
names_to = "Group",
values_to = "log10LR"
) %>%
filter(is.finite(log10LR))  # Optional: remove -Inf/Inf
# 2. Build the plot with capped y-axis
p_fc <- ggplot(plot_data_fc, aes(x = log10LR, colour = Group, fill = Group)) +
geom_density(alpha = 0.5, size = 0.8) +
geom_vline(xintercept = 0, linetype = "dashed", colour = "black") +
coord_cartesian(ylim = c(0, 0.05)) +
labs(
title = "Distribution of Capped log10LRs for FC vs UN (9991 SNPs)",
x = "log10LR",
y = "Density"
) +
theme_minimal() +
theme(
legend.title = element_blank(),
legend.position = "right"
)
# 3. Display it in the plot pane
print(p_fc)
# 4. Optionally save as PDF
ggsave(
filename = "FC_vs_UN_9991SNPs_log10LR_ycapped.pdf",
plot = p_fc,
width = 8,
height = 6,
dpi = 300
)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
# Read files
FS_linked <- read.table("/Users/huncho/Desktop/Forensic_Kinship_Project/10,000_SNPs/FS_Simulation/FS_Linked/FS_Linked_lnlikelihoods.txt", header = TRUE)
FS_linked_unrelated <- read.table("/Users/huncho/Desktop/Forensic_Kinship_Project/10,000_SNPs/FS_Simulation/FS_Linked_Unrelated/FS_Linked_Unrelated_lnlikelihoods.txt", header = TRUE)
un_linked <- read.table("/Users/huncho/Desktop/Forensic_Kinship_Project/10,000_SNPs/FS_Simulation/UN_Linked/UN_Linked_lnlikelihoods.txt", header = TRUE)
un_linked_unrelated <- read.table("/Users/huncho/Desktop/Forensic_Kinship_Project/10,000_SNPs/FS_Simulation/UN_Linked_Unrelated/UN_Linked_Unrelated_lnlikelihoods.txt", header = TRUE)
FS_unlinked <- read.table("/Users/huncho/Desktop/Forensic_Kinship_Project/10,000_SNPs/FS_Simulation/FS_Unlinked/FS_Unlinked_lnlikelihoods.txt", header = TRUE)
FS_unlinked_unrelated <- read.table("/Users/huncho/Desktop/Forensic_Kinship_Project/10,000_SNPs/FS_Simulation/FS_Unlinked_Unrelated/FS_Unlinked_Unrelated_lnlikelihoods.txt", header = TRUE)
un_unlinked <- read.table("/Users/huncho/Desktop/Forensic_Kinship_Project/10,000_SNPs/FS_Simulation/UN_Unlinked/UN_Unlinked_lnlikelihoods.txt", header = TRUE)
un_unlinked_unrelated <- read.table("/Users/huncho/Desktop/Forensic_Kinship_Project/10,000_SNPs/FS_Simulation/UN_Unlinked_Unrelated/UN_Unlinked_Unrelated_lnlikelihoods.txt", header = TRUE)
all_lnL <- FS_linked %>%
rename(FS_linked = total_lnlikelihood) %>%
inner_join(FS_linked_unrelated %>% rename(FS_linked_unr = total_lnlikelihood), by = "replicate") %>%
inner_join(un_linked %>% rename(un_linked = total_lnlikelihood), by = "replicate") %>%
inner_join(un_linked_unrelated %>% rename(un_linked_unr = total_lnlikelihood), by = "replicate") %>%
inner_join(FS_unlinked %>% rename(FS_unlinked = total_lnlikelihood), by = "replicate") %>%
inner_join(FS_unlinked_unrelated %>% rename(FS_unlinked_unr = total_lnlikelihood), by = "replicate") %>%
inner_join(un_unlinked %>% rename(un_unlinked = total_lnlikelihood), by = "replicate") %>%
inner_join(un_unlinked_unrelated %>% rename(un_unlinked_unr = total_lnlikelihood), by = "replicate")
# Compute LR, logLR, and log10LR
all_lnL <- all_lnL %>%
mutate(
logLR_FS_linked = FS_linked - FS_linked_unr,
logLR_UN_linked = un_linked - un_linked_unr,
logLR_FS_unlinked = FS_unlinked - FS_unlinked_unr,
logLR_UN_unlinked = un_unlinked - un_unlinked_unr,
LR_FS_linked = exp(logLR_FS_linked),
LR_UN_linked = exp(logLR_UN_linked),
LR_FS_unlinked = exp(logLR_FS_unlinked),
LR_UN_unlinked = exp(logLR_UN_unlinked),
log10LR_FS_linked = logLR_FS_linked / log(10),
log10LR_UN_linked = logLR_UN_linked / log(10),
log10LR_FS_unlinked = logLR_FS_unlinked / log(10),
log10LR_UN_unlinked = logLR_UN_unlinked / log(10)
)
write.table(all_lnL, "FSvUN_LR_full_output.txt", sep = "\t", row.names = FALSE, quote = FALSE)
summary_stats <- data.frame(
condition = c("FS_linked", "UN_linked", "FS_unlinked", "UN_unlinked"),
min = c(
min(all_lnL$logLR_FS_linked),
min(all_lnL$logLR_UN_linked),
min(all_lnL$logLR_FS_unlinked),
min(all_lnL$logLR_UN_unlinked)
),
median = c(
median(all_lnL$logLR_FS_linked),
median(all_lnL$logLR_UN_linked),
median(all_lnL$logLR_FS_unlinked),
median(all_lnL$logLR_UN_unlinked)
),
max = c(
max(all_lnL$logLR_FS_linked),
max(all_lnL$logLR_UN_linked),
max(all_lnL$logLR_FS_unlinked),
max(all_lnL$logLR_UN_unlinked)
)
)
# Save summary stats
write.table(summary_stats, "FSvUN_logLR_summary_stats.txt", sep = "\t", row.names = FALSE, quote = FALSE)
library(dplyr)
library(tidyr)
library(ggplot2)
library(scales)
plot_data <- all_lnL %>%
transmute(
FS_linked    = log10LR_FS_linked,
FS_unlinked  = log10LR_FS_unlinked,
UN_linked    = log10LR_UN_linked,
UN_unlinked  = log10LR_UN_unlinked
) %>%
pivot_longer(
cols = everything(),
names_to = "Group",
values_to = "log10LR"
)
p <- ggplot(plot_data, aes(x = log10LR, colour = Group, fill = Group)) +
geom_density(alpha = 0.5, size = 0.8) +
geom_vline(xintercept = 0, linetype = "dashed", colour = "black") +
labs(
title = "Distribution of log10LRs for FS vs UN (9991 SNPs)",
x = "log10LR",
y = "Density"
) +
theme_minimal() +
theme(
legend.title = element_blank(),
legend.position = "right"
)
print(p)
ggsave(
filename = "FS_vs_UN_9991SNPs_log10LR.pdf",
plot = p,
device = "pdf",
width = 8,
height = 6,
dpi = 300
)
# Load required libraries
library(ggplot2)
library(dplyr)
library(tidyr)
# 1. Combine log10LRs into long format for FS vs UN only
plot_data_FS <- all_lnL %>%
transmute(
FS_linked    = log10LR_FS_linked,
FS_unlinked  = log10LR_FS_unlinked,
UN_linked    = log10LR_UN_linked,
UN_unlinked  = log10LR_UN_unlinked
) %>%
pivot_longer(
cols = everything(),
names_to = "Group",
values_to = "log10LR"
) %>%
filter(is.finite(log10LR))  # Optional: remove -Inf/Inf
# 2. Build the plot with capped y-axis
p_FS <- ggplot(plot_data_FS, aes(x = log10LR, colour = Group, fill = Group)) +
geom_density(alpha = 0.5, size = 0.8) +
geom_vline(xintercept = 0, linetype = "dashed", colour = "black") +
coord_cartesian(ylim = c(0, 0.025)) +
labs(
title = "Distribution of Capped log10LRs for FS vs UN (9991 SNPs)",
x = "log10LR",
y = "Density"
) +
theme_minimal() +
theme(
legend.title = element_blank(),
legend.position = "right"
)
# 3. Display it in the plot pane
print(p_FS)
# 4. Optionally save as pdf
ggsave(
filename = "FS_vs_UN_9991SNPs_log10LR_ycapped.pdf",
plot = p_FS,
width = 8,
height = 6,
dpi = 300
)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(dplyr)
# Read files
HS_linked <- read.table("/Users/huncho/Desktop/Forensic_Kinship_Project/10,000_SNPs/HS_Simulation/HS_Linked/HS_Linked_lnlikelihoods.txt", header = TRUE)
HS_linked_unrelated <- read.table("/Users/huncho/Desktop/Forensic_Kinship_Project/10,000_SNPs/HS_Simulation/HS_Linked_Unrelated/HS_Linked_Unrelated_lnlikelihoods.txt", header = TRUE)
un_linked <- read.table("/Users/huncho/Desktop/Forensic_Kinship_Project/10,000_SNPs/HS_Simulation/UN_Linked/UN_Linked_lnlikelihoods.txt", header = TRUE)
un_linked_unrelated <- read.table("/Users/huncho/Desktop/Forensic_Kinship_Project/10,000_SNPs/HS_Simulation/UN_Linked_Unrelated/UN_Linked_Unrelated_lnlikelihoods.txt", header = TRUE)
HS_unlinked <- read.table("/Users/huncho/Desktop/Forensic_Kinship_Project/10,000_SNPs/HS_Simulation/HS_Unlinked/HS_Unlinked_lnlikelihoods.txt", header = TRUE)
HS_unlinked_unrelated <- read.table("/Users/huncho/Desktop/Forensic_Kinship_Project/10,000_SNPs/HS_Simulation/HS_Unlinked_Unrelated/HS_Unlinked_Unrelated_lnlikelihoods.txt", header = TRUE)
un_unlinked <- read.table("/Users/huncho/Desktop/Forensic_Kinship_Project/10,000_SNPs/HS_Simulation/UN_Unlinked/UN_Unlinked_lnlikelihoods.txt", header = TRUE)
un_unlinked_unrelated <- read.table("/Users/huncho/Desktop/Forensic_Kinship_Project/10,000_SNPs/HS_Simulation/UN_Unlinked_Unrelated/UN_Unlinked_Unrelated_lnlikelihoods.txt", header = TRUE)
all_lnL <- HS_linked %>%
rename(HS_linked = total_lnlikelihood) %>%
inner_join(HS_linked_unrelated %>% rename(HS_linked_unr = total_lnlikelihood), by = "replicate") %>%
inner_join(un_linked %>% rename(un_linked = total_lnlikelihood), by = "replicate") %>%
inner_join(un_linked_unrelated %>% rename(un_linked_unr = total_lnlikelihood), by = "replicate") %>%
inner_join(HS_unlinked %>% rename(HS_unlinked = total_lnlikelihood), by = "replicate") %>%
inner_join(HS_unlinked_unrelated %>% rename(HS_unlinked_unr = total_lnlikelihood), by = "replicate") %>%
inner_join(un_unlinked %>% rename(un_unlinked = total_lnlikelihood), by = "replicate") %>%
inner_join(un_unlinked_unrelated %>% rename(un_unlinked_unr = total_lnlikelihood), by = "replicate")
# Compute LR, logLR, and log10LR
all_lnL <- all_lnL %>%
mutate(
logLR_HS_linked = HS_linked - HS_linked_unr,
logLR_UN_linked = un_linked - un_linked_unr,
logLR_HS_unlinked = HS_unlinked - HS_unlinked_unr,
logLR_UN_unlinked = un_unlinked - un_unlinked_unr,
LR_HS_linked = exp(logLR_HS_linked),
LR_UN_linked = exp(logLR_UN_linked),
LR_HS_unlinked = exp(logLR_HS_unlinked),
LR_UN_unlinked = exp(logLR_UN_unlinked),
log10LR_HS_linked = logLR_HS_linked / log(10),
log10LR_UN_linked = logLR_UN_linked / log(10),
log10LR_HS_unlinked = logLR_HS_unlinked / log(10),
log10LR_UN_unlinked = logLR_UN_unlinked / log(10)
)
write.table(all_lnL, "HSvUN_LR_full_output.txt", sep = "\t", row.names = FALSE, quote = FALSE)
summary_stats <- data.frame(
condition = c("HS_linked", "UN_linked", "HS_unlinked", "UN_unlinked"),
min = c(
min(all_lnL$logLR_HS_linked),
min(all_lnL$logLR_UN_linked),
min(all_lnL$logLR_HS_unlinked),
min(all_lnL$logLR_UN_unlinked)
),
median = c(
median(all_lnL$logLR_HS_linked),
median(all_lnL$logLR_UN_linked),
median(all_lnL$logLR_HS_unlinked),
median(all_lnL$logLR_UN_unlinked)
),
max = c(
max(all_lnL$logLR_HS_linked),
max(all_lnL$logLR_UN_linked),
max(all_lnL$logLR_HS_unlinked),
max(all_lnL$logLR_UN_unlinked)
)
)
# Save summary stats
write.table(summary_stats, "HSvUN_logLR_summary_stats.txt", sep = "\t", row.names = FALSE, quote = FALSE)
library(dplyr)
library(tidyr)
library(ggplot2)
library(scales)
plot_data <- all_lnL %>%
transmute(
HS_linked    = log10LR_HS_linked,
HS_unlinked  = log10LR_HS_unlinked,
UN_linked    = log10LR_UN_linked,
UN_unlinked  = log10LR_UN_unlinked
) %>%
pivot_longer(
cols = everything(),
names_to = "Group",
values_to = "log10LR"
)
p <- ggplot(plot_data, aes(x = log10LR, colour = Group, fill = Group)) +
geom_density(alpha = 0.5, size = 0.8) +
geom_vline(xintercept = 0, linetype = "dashed", colour = "black") +
labs(
title = "Distribution of log10LRs for HS vs UN (9991 SNPs)",
x = "log10LR",
y = "Density"
) +
theme_minimal() +
theme(
legend.title = element_blank(),
legend.position = "right"
)
print(p)
ggsave(
filename = "HS_vs_UN_9991SNPs_log10LR.pdf",
plot = p,
device = "pdf",
width = 8,
height = 6,
dpi = 300
)
# Load required libraries
library(ggplot2)
library(dplyr)
library(tidyr)
# 1. Combine log10LRs into long format for HS vs UN only
plot_data_HS <- all_lnL %>%
transmute(
HS_linked    = log10LR_HS_linked,
HS_unlinked  = log10LR_HS_unlinked,
UN_linked    = log10LR_UN_linked,
UN_unlinked  = log10LR_UN_unlinked
) %>%
pivot_longer(
cols = everything(),
names_to = "Group",
values_to = "log10LR"
) %>%
filter(is.finite(log10LR))  # Optional: remove -Inf/Inf
# 2. Build the plot with capped y-axis
p_HS <- ggplot(plot_data_HS, aes(x = log10LR, colour = Group, fill = Group)) +
geom_density(alpha = 0.5, size = 0.8) +
geom_vline(xintercept = 0, linetype = "dashed", colour = "black") +
coord_cartesian(ylim = c(0, 0.06)) +
labs(
title = "Distribution of Capped log10LRs for HS vs UN (9991 SNPs)",
x = "log10LR",
y = "Density"
) +
theme_minimal() +
theme(
legend.title = element_blank(),
legend.position = "right"
)
# 3. Display it in the plot pane
print(p_HS)
# 4. Optionally save as pdf
ggsave(
filename = "HS_vs_UN_9991SNPs_log10LR_ycapped.pdf",
plot = p_HS,
width = 8,
height = 6,
dpi = 300
)
